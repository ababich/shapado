= f.error_messages
= error_messages_for(:user)

=render "followup_form.html.haml", local_assigns

-if @question.position
  = hidden_field_tag "question[position][lat]", @question.position["lat"], :class => "lat_input"
  = hidden_field_tag "question[position][long]", @question.position["long"], :class => "long_input"
.field
  = f.label :title, "#{t(:title, :scope => "activerecord.attributes.question")}*"
  = f.text_field :title
  %small
    = raw(current_group.question_prompt)

.field.related_questions
  %label
    =t(".related_questions", :default => :"questions.show.related_questions" )
  %ul#related_questions
  %small Here you will find questions that are similar to yours

.field
  = f.label :tags, "#{t(:tags, :scope => "activerecord.attributes.question")}", :class => "label"
  = f.text_field :tags, :value => @question.tags.join(", "), :class => "text_field autocomplete_for_tags"
  %small
    = t(".tags_tip")

.field
  =render "editor.html.haml", local_assigns
  .clear

.field
  -if !@question.new_record?
    = render "attachments", :question => @question, :attachments => @question.attachments, :editing => true
  #attachments
    #fields
      .attachment_field.template
        = f.file_field "attachments[0]"
        = link_to t('.remove_attachment'), "#", :class => "remove_attachment"
    = link_to t('.add_attachment'), "#", :class => "add_attachment"


-if current_group.languages.size>1 && AppConfig.enable_i18n
  .field
    = f.label :language, t(:language, :scope => "activerecord.attributes.question"), :class => "label"
    - selected = @question.new? ? current_group.language : @question.language
    = f.select :language, languages_options(known_languages(current_user, current_group)), {:selected => selected}, {:class => "select"}
    %small
      = t(".language_tip")
-else
  -language = ""
  -if !AppConfig.enable_i18n
    -language = AppConfig.default_language
  -elsif current_group.language.blank?
    -language = current_group.languages.first
  -else
    -language = current_group.language
  = f.hidden_field :language, :value => language

-if current_group.has_adult_content
  .field
    = f.check_box :adult_content, :class => "checkbox"
    = f.label :adult_content, t(".adult_content"), :class => "radio"

-if !@question.new?
  .field
    = f.label :version_message, t("wiki.model.attributes.message"), :class => "label"
    = f.text_field :version_message, :class => "text_field"
-elsif !logged_in?
  = render :partial => "users/anonymous_form"
